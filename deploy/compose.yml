# Nombre de archivo: compose.yml
# Ubicación de archivo: deploy/compose.yml
# Descripción: Stack base con PostgreSQL + API FastAPI + healthchecks y volumen persistente
version: "3.9"

name: lasfocas

services:
  postgres:
    image: postgres:16-alpine
    container_name: lasfocas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_APP_PASSWORD_FILE: /run/secrets/postgres_app_password
      POSTGRES_READONLY_PASSWORD_FILE: /run/secrets/postgres_readonly_password
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
      - ./db/init_users.sh:/docker-entrypoint-initdb.d/01-users.sh:ro
    secrets:
      - postgres_password
      - postgres_app_password
      - postgres_readonly_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 20
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    networks:
      - lasfocas_net

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    container_name: lasfocas-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Aseguramos que el host de DB sea el nombre del servicio de compose
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    # Expuesto solo en la red interna; requerir proxy inverso para acceso externo
    expose:
      - "8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "512M"
    networks:
      - lasfocas_net
    secrets:
      - postgres_app_password
      - smtp_host
      - smtp_user
      - smtp_password
      - smtp_from
      - notion_token

  web:
    build:
      context: ../web
      dockerfile: Dockerfile
    container_name: lasfocas-web
    restart: unless-stopped
    env_file:
      - .env
    expose:
      - "8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
    networks:
      - lasfocas_net
    secrets:
      - web_admin_username
      - web_admin_password
      - web_lector_username
      - web_lector_password
      - notion_token

  nlp_intent:
    build:
      context: ..
      dockerfile: deploy/docker/nlp_intent.Dockerfile
    env_file:
      - ../.env
    expose:
      - "8100"
    restart: unless-stopped
    secrets:
      - openai_api_key
    healthcheck:
      test: ["CMD-SHELL", "sh /app/app/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 12
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "1G"
    networks:
      - lasfocas_net

  bot:
    build:
      context: ..
      dockerfile: deploy/docker/bot.Dockerfile
    env_file:
      - ../.env
    depends_on:
      - api
    restart: unless-stopped
    volumes:
      - bot_data:/app/data
    secrets:
      - telegram_bot_token
      - postgres_app_password
    healthcheck:
      test: ["CMD-SHELL", "sh /app/bot_telegram/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 12
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
    networks:
      - lasfocas_net

  worker:
    build:
      context: ..
      dockerfile: deploy/docker/worker.Dockerfile
    env_file:
      - ../.env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import os'"]
      interval: 10s
      timeout: 5s
      retries: 12
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
    networks:
      - lasfocas_net
    secrets:
      - postgres_app_password
      - notion_token
    profiles: ["worker"]

  redis:
    image: redis:7-alpine
    container_name: lasfocas-redis
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 12
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "128M"
    networks:
      - lasfocas_net
    secrets:
      - redis_password
    profiles: ["worker"]

  ollama:
    image: ollama/ollama:0.11.6
    container_name: lasfocas-ollama
    restart: unless-stopped
    expose:
      - "11434"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:11434/api/tags || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "2G"
    networks:
      - lasfocas_net

  # (Opcional) pgAdmin. Levantar con: docker compose -f deploy/compose.yml --profile pgadmin up -d
  # Solo para desarrollo
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: lasfocas-pgadmin
    profiles: ["pgadmin"]
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL_FILE: /run/secrets/pgadmin_default_email
      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/pgadmin_default_password
    ports:
      - "5050:80"
    secrets:
      - pgadmin_default_email
      - pgadmin_default_password
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:80/login || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
    depends_on:
      - postgres
    networks:
      - lasfocas_net

volumes:
  postgres_data:
  bot_data:
  ollama_data:

secrets:
  postgres_password:
    file: ./secrets/postgres_password
  postgres_app_password:
    file: ./secrets/postgres_app_password
  postgres_readonly_password:
    file: ./secrets/postgres_readonly_password
  redis_password:
    file: ./secrets/redis_password
  telegram_bot_token:
    file: ./secrets/telegram_bot_token
  openai_api_key:
    file: ./secrets/openai_api_key
  smtp_host:
    file: ./secrets/smtp_host
  smtp_user:
    file: ./secrets/smtp_user
  smtp_password:
    file: ./secrets/smtp_password
  smtp_from:
    file: ./secrets/smtp_from
  web_admin_username:
    file: ./secrets/web_admin_username
  web_admin_password:
    file: ./secrets/web_admin_password
  web_lector_username:
    file: ./secrets/web_lector_username
  web_lector_password:
    file: ./secrets/web_lector_password
  notion_token:
    file: ./secrets/notion_token
  pgadmin_default_email:
    file: ./secrets/pgadmin_default_email
  pgadmin_default_password:
    file: ./secrets/pgadmin_default_password

networks:
  lasfocas_net:
    driver: bridge
